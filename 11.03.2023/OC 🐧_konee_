'''
üêß_konee_
'''


import webbrowser
from time import sleep
from tkinter import *
from tkinter import *
import random as rdm
from tkinter import *
import time
import random

print("üêß")

sleep(3)
print("üêß_“ú„ÑñÂá†‰πá‰πá_")

sleep(1)
print("üêß_konee_")

sleep(2)
print("{_}")

sleep(2)
print("{__}")

sleep(1)
print("{____}")

sleep(2)
print("{_____}")

sleep(2)
print("{______}")

sleep(1)
print("–≤–∫–ª—é—á–µ–Ω–∏–µ")

sleep(3)
print("–≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")


n=int(input())
while (n!=3575):
 print('–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ_–ø–æ–ø—ã—Ç–∫—É: ')
 n=int(input())
print("_–¥–æ–±—Ä–æ_–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å_")

fer= input("–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç")
if fer == "14":
 print("‚úî")
 sleep(1)

fer= input("–∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–æ–π—Ç–∏? —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ ")
if fer == "—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫":
 print("◊•‡∏£t‡∏Ñ‡∏†‡πè◊©—í‡πÄ–∫")
 sleep(1)

 print("‚öô")

 print("–≤—ã –≤–æ—à–ª–∏ –≤ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –Ω–∞—á–∏–Ω–∞–µ—Å—Ç—è –∑–∞–≥—Ä—É–∑–∫–∞")
else:
 ("–ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ –Ω–∞–∂–º–∏ —ç–Ω—Ç–µ—Ä")
print("{_}")
sleep(2)
print("{__}")

sleep(1)
print("{____}")

sleep(2)
print("{_____}")

sleep(2)
print("{______}")

sleep(2)
matems=input ("–ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ –Ω–∞–∂–º–∏ —ç–Ω—Ç–µ—Ä") 
if matems== "":

 print ("‚úî")
else:
 print("–Ω–∞–∂–º–∏—Ç–µ —ç–Ω—Ç–µ—Ä")
sleep(1)
mam=input ("–∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–æ–π—Ç–∏?: –≤–∫, —è–Ω–¥–µ–∫—Å, –∞–≤–∏—Ç–æ, –µ—Å–ª–∏ –¥—Ä—É–≥–æ–µ –Ω–∞–ø–∏—à–∏—Ç–µ (–¥—Ä—É–≥–æ–µ)")
if mam== "–≤–∫":
 webbrowser.open_new_tab('https://vk.com')


elif mam =="—è–Ω–¥–µ–∫—Å":
 webbrowser.open_new_tab('https://dzen.ru/?yredirect=true')
elif mam =="–∞–≤–∏—Ç–æ":

 webbrowser.open_new_tab('https://www.avito.ru')
else:
 ("–Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫")

print("–≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–¥–∞")
while (n!=4816):
 print('–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ_–ø–æ–ø—ã—Ç–∫—É: ')

 n=int(input())
print("___ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∞–ª–µ–∫—Å–µ–π!")
sleep(1)
y =input (" –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ: https://github.com/rolleshub/python-pro/commit/4789bc39e620d77ce2517814c629b2b7a3531a4e")

rtk=input ("–µ—Å–ª–∏ –Ω—É–∂–µ–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞–∂–º–∏ —ç–Ω—Ç–µ—Ä")



class Main(Frame):
    def __init__(self, root):
        super(Main, self).__init__(root)
        self.build()

    def build(self):
        self.formula = "0"
        self.lbl = Label(text=self.formula, font=("Times New Roman", 21, "bold"), bg="#000", foreground="#FFF")
        self.lbl.place(x=11, y=50)

        btns = [
            "C", "DEL", "*", "=",
            "1", "2", "3", "/",
            "4", "5", "6", "+",
            "7", "8", "9", "-",
            "(", "0", ")", "X^2"
        ]

        x = 10
        y = 140
        for bt in btns:
            com = lambda x=bt: self.logicalc(x)
            Button(text=bt, bg="#FFF",
                   font=("Times New Roman", 15),
                   command=com).place(x=x, y=y,
                                      width=115,
                                      height=79)
            x += 117
            if x > 400:
                x = 10
                y += 81

    def logicalc(self, operation):
        if operation == "C":
            self.formula = ""
        elif operation == "DEL":
            self.formula = self.formula[0:-1]
        elif operation == "X^2":
            self.formula = str((eval(self.formula))**2)
        elif operation == "=":
            self.formula = str(eval(self.formula))
        else:
            if self.formula == "0":
                self.formula = ""
            self.formula += operation
        self.update()

    def update(self):
        if self.formula == "":
            self.formula = "0"
        self.lbl.configure(text=self.formula)


if __name__ == '__main__':
    root = Tk()
    root["bg"] = "#000"
    root.geometry("485x550+200+200")
    root.title("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
    root.resizable(False, False)
    app = Main(root)
    app.pack()
    root.mainloop()

gw=input("–∏–≥—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ —ç–Ω—Ç–µ—Ä")


class Main(Frame):
    def __init__(self, root):
        super(Main, self).__init__(root)
        self.startUI()

    def startUI(self):
        btn = Button(root, text="–ö–∞–º–µ–Ω—å", font=("Times New Roman", 15),
                     command=lambda x=1: self.btn_click(x))
        btn2 = Button(root, text="–ù–æ–∂–Ω–∏—Ü—ã", font=("Times New Roman", 15),
                      command=lambda x=2: self.btn_click(x))
        btn3 = Button(root, text="–ë—É–º–∞–≥–∞", font=("Times New Roman", 15),
                      command=lambda x=3: self.btn_click(x))

        btn.place(x=10, y=100, width=120, height=50)
        btn2.place(x=155, y=100, width=120, height=50)
        btn3.place(x=300, y=100, width=120, height=50)

        self.lbl = Label(root, text="–ù–∞—á–∞–ª–æ –∏–≥—Ä—ã!", bg="#FFF", font=("Times New Roman", 21, "bold"))
        self.lbl.place(x=150, y=25)

        self.win = self.drow = self.lose = 0

        self.lbl2 = Label(root, justify="left", font=("Times New Roman", 13),
                         text=f"–ü–æ–±–µ–¥: {self.win}\n–ü—Ä–æ–∏–≥—Ä—ã—à–µ–π:"
                              f" {self.lose}\n–ù–∏—á–µ–π: {self.drow}",
                         bg="#FFF")
        self.lbl2.place(x=5, y=5)

    def btn_click(self, choise):
        comp_choise = rdm.randint(1, 3)

        if choise == comp_choise:
            self.drow += 1
            self.lbl.configure(text="–ù–∏—á—å—è")
        elif choise == 1 and comp_choise == 2 \
                or choise == 2 and comp_choise == 3 \
                or choise == 3 and comp_choise == 1:
            self.win += 1
            self.lbl.configure(text="–ü–æ–±–µ–¥–∞")
        else:
            self.lose += 1
            self.lbl.configure(text="–ü—Ä–æ–∏–≥—Ä—ã—à")

        self.lbl2.configure(text=f"–ü–æ–±–µ–¥: {self.win}\n–ü—Ä–æ–∏–≥—Ä—ã—à–µ–π:"
                              f" {self.lose}\n–ù–∏—á–µ–π: {self.drow}")

        del comp_choise


if __name__ == '__main__':
    root = Tk()
    root.geometry("430x160+200+200")
    root.title("–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞")
    root.resizable(False, False)
    root["bg"] = "#FFF"
    app = Main(root)
    app.pack()
    root.mainloop()

fw=input("–Ω–∞–∂–º–∏—Ç–µ –ø—Ä–æ–±–µ–ª –¥–ª—è –µ—â—ë –æ–¥–Ω–æ–π –∏–≥—Ä—ã")

# —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç ‚Äî –æ–∫–Ω–æ —Å –∏–≥—Ä–æ–≤—ã–º –ø–æ–ª–µ–º. –í –Ω–∞—à–µ–º —Å–ª—É—á–∞–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫–Ω–∞ –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è tk, –∏ –º—ã –µ–≥–æ —Å–¥–µ–ª–∞–ª–∏ –∏–∑ –∫–ª–∞—Å—Å–∞ Tk() ‚Äî –æ–Ω –µ—Å—Ç—å –≤ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–µ 
tk = Tk()
# –¥–µ–ª–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞ ‚Äî Games —Å –ø–æ–º–æ—â—å—é —Å–≤–æ–π—Å—Ç–≤–∞ –æ–±—ä–µ–∫—Ç–∞ title
tk.title('Game')
# –∑–∞–ø—Ä–µ—â–∞–µ–º –º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞, –¥–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–≤–æ–π—Å—Ç–≤–æ resizable 
tk.resizable(0, 0)
# –ø–æ–º–µ—â–∞–µ–º –Ω–∞—à–µ –∏–≥—Ä–æ–≤–æ–µ –æ–∫–Ω–æ –≤—ã—à–µ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –Ω–∞ –∫–æ–º–ø—å—é—Ç–µ—Ä–µ, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –æ–∫–Ω–∞ –Ω–µ –º–æ–≥–ª–∏ –µ–≥–æ –∑–∞—Å–ª–æ–Ω–∏—Ç—å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ :)
tk.wm_attributes('-topmost', 1)
# —Å–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π —Ö–æ–ª—Å—Ç ‚Äî 400 –Ω–∞ 500 –ø–∏–∫—Å–µ–ª–µ–π, –≥–¥–µ –∏ –±—É–¥–µ–º —Ä–∏—Å–æ–≤–∞—Ç—å –∏–≥—Ä—É
canvas = Canvas(tk, width=500, height=400, highlightthickness=0)
# –≥–æ–≤–æ—Ä–∏–º —Ö–æ–ª—Å—Ç—É, —á—Ç–æ —É –∫–∞–∂–¥–æ–≥–æ –≤–∏–¥–∏–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –±—É–¥—É—Ç —Å–≤–æ–∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã 
canvas.pack()
# –æ–±–Ω–æ–≤–ª—è–µ–º –æ–∫–Ω–æ —Å —Ö–æ–ª—Å—Ç–æ–º
tk.update()
# –û–ø–∏—Å—ã–≤–∞–µ–º –∫–ª–∞—Å—Å Ball, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–≤–µ—á–∞—Ç—å –∑–∞ —à–∞—Ä–∏–∫ 
class Ball:
    # –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä ‚Äî –æ–Ω –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –≤ –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —ç—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞
    def __init__(self, canvas, paddle, score, color):
        # –∑–∞–¥–∞—ë–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–±—ä–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–º –ø–µ—Ä–µ–¥–∞—é—Ç –≤ —Å–∫–æ–±–∫–∞—Ö –≤ –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è
        self.canvas = canvas
        self.paddle = paddle
        self.score = score
        # —Ü–≤–µ—Ç –Ω—É–∂–µ–Ω –±—ã–ª –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –º—ã –∏–º –∑–∞–∫—Ä–∞—Å–∏–ª–∏ –≤–µ—Å—å —à–∞—Ä–∏–∫
        # –∑–¥–µ—Å—å –ø–æ—è–≤–ª—è–µ—Ç—Å—è –Ω–æ–≤–æ–µ —Å–≤–æ–π—Å—Ç–≤–æ id, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —à–∞—Ä–∏–∫–∞
        # –∞ –µ—â—ë –∫–æ–º–∞–Ω–¥–æ–π create_oval –º—ã —Å–æ–∑–¥–∞—ë–º –∫—Ä—É–≥ —Ä–∞–¥–∏—É—Å–æ–º 15 –ø–∏–∫—Å–µ–ª–µ–π –∏ –∑–∞–∫—Ä–∞—à–∏–≤–∞–µ–º –Ω—É–∂–Ω—ã–º —Ü–≤–µ—Ç–æ–º
        self.id = canvas.create_oval(10,10, 25, 25, fill=color)
        # –ø–æ–º–µ—â–∞–µ–º —à–∞—Ä–∏–∫ –≤ —Ç–æ—á–∫—É —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ 245,100
        self.canvas.move(self.id, 245, 100)
        # –∑–∞–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –¥–ª—è —Å—Ç–∞—Ä—Ç–∞
        starts = [-2, -1, 1, 2]
        # –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –µ–≥–æ 
        random.shuffle(starts)
        # –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π –∏–∑ –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω–æ–≥–æ ‚Äî —ç—Ç–æ –±—É–¥–µ—Ç –≤–µ–∫—Ç–æ—Ä –¥–≤–∏–∂–µ–Ω–∏—è —à–∞—Ä–∏–∫–∞
        self.x = starts[0]
        # –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –æ–Ω –≤—Å–µ–≥–¥–∞ –ø–∞–¥–∞–µ—Ç –≤–Ω–∏–∑, –ø–æ—ç—Ç–æ–º—É —É–º–µ–Ω—å—à–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ –æ—Å–∏ y
        self.y = -2
        # —à–∞—Ä–∏–∫ —É–∑–Ω–∞—ë—Ç —Å–≤–æ—é –≤—ã—Å–æ—Ç—É –∏ —à–∏—Ä–∏–Ω—É
        self.canvas_height = self.canvas.winfo_height()
        self.canvas_width = self.canvas.winfo_width()
        # —Å–≤–æ–π—Å—Ç–≤–æ, –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ç–æ, –¥–æ—Å—Ç–∏–≥ —à–∞—Ä–∏–∫ –¥–Ω–∞ –∏–ª–∏ –Ω–µ—Ç. –ü–æ–∫–∞ –Ω–µ –¥–æ—Å—Ç–∏–≥, –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç False
        self.hit_bottom = False
    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Å–∞–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã, –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–ª—É—á–∞–µ–º 4 –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —à–∞—Ä–∏–∫–∞ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π pos (–ª–µ–≤–∞—è –≤–µ—Ä—Ö–Ω—è—è –∏ –ø—Ä–∞–≤–∞—è –Ω–∏–∂–Ω—è—è —Ç–æ—á–∫–∏)
    def hit_paddle(self, pos):
        # –ø–æ–ª—É—á–∞–µ–º –∫–æ—Ä–¥–∏–Ω–∞—Ç—ã –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ –æ–±—ä–µ–∫—Ç paddle (–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞)
        paddle_pos = self.canvas.coords(self.paddle.id)
        # –µ—Å–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∫–∞—Å–∞–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—Ç —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        if pos[2] >= paddle_pos[0] and pos[0] <= paddle_pos[2]:
            if pos[3] >= paddle_pos[1] and pos[3] <= paddle_pos[3]:
                # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —ç—Ç–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –±—É–¥–µ—Ç –æ–ø–∏—Å–∞–Ω –Ω–∏–∂–µ)
                self.score.hit()
                # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ—Ç–∫—É –æ —Ç–æ–º, —á—Ç–æ –º—ã —É—Å–ø–µ—à–Ω–æ –∫–æ—Å–Ω—É–ª–∏—Å—å
                return True
        # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º False ‚Äî –∫–∞—Å–∞–Ω–∏—è –Ω–µ –±—ã–ª–æ
        return False
    # –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–≤–∏–∂–µ–Ω–∏–µ —à–∞—Ä–∏–∫–∞
    def draw(self):
        # –ø–µ—Ä–µ–¥–≤–∏–≥–∞–µ–º —à–∞—Ä–∏–∫ –Ω–∞ –∑–∞–¥–∞–Ω–Ω—ã–π –≤–µ–∫—Ç–æ—Ä x –∏ y
        self.canvas.move(self.id, self.x, self.y)
        # –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –Ω–æ–≤—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —à–∞—Ä–∏–∫–∞
        pos = self.canvas.coords(self.id)
        # –µ—Å–ª–∏ —à–∞—Ä–∏–∫ –ø–∞–¥–∞–µ—Ç —Å–≤–µ—Ä—Ö—É  
        if pos[1] <= 0:
            # –∑–∞–¥–∞—ë–º –ø–∞–¥–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–º —à–∞–≥–µ = 2
            self.y = 2
        # –µ—Å–ª–∏ —à–∞—Ä–∏–∫ –ø—Ä–∞–≤—ã–º –Ω–∏–∂–Ω–∏–º —É–≥–ª–æ–º –∫–æ—Å–Ω—É–ª—Å—è –¥–Ω–∞
        if pos[3] >= self.canvas_height:
            # –ø–æ–º–µ—á–∞–µ–º —ç—Ç–æ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
            self.hit_bottom = True
            # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤
            canvas.create_text(250, 120, text='–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏', font=('Courier', 30), fill='red')
        # –µ—Å–ª–∏ –±—ã–ª–æ –∫–∞—Å–∞–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        if self.hit_paddle(pos) == True:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —à–∞—Ä–∏–∫ –Ω–∞–≤–µ—Ä—Ö
            self.y = -2
        # –µ—Å–ª–∏ –∫–æ—Å–Ω—É–ª–∏—Å—å –ª–µ–≤–æ–π —Å—Ç–µ–Ω–∫–∏
        if pos[0] <= 0:
            # –¥–≤–∏–∂–µ–º—Å—è –≤–ø—Ä–∞–≤–æ
            self.x = 2
        # –µ—Å–ª–∏ –∫–æ—Å–Ω—É–ª–∏—Å—å –ø—Ä–∞–≤–æ–π —Å—Ç–µ–Ω–∫–∏
        if pos[2] >= self.canvas_width:
            # –¥–≤–∏–∂–µ–º—Å—è –≤–ª–µ–≤–æ
            self.x = -2
#  –û–ø–∏—Å—ã–≤–∞–µ–º –∫–ª–∞—Å—Å Paddle, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
class Paddle:
    # –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    def __init__(self, canvas, color):
        # canvas –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –±—É–¥–µ—Ç –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–∞ –Ω–∞ –Ω–∞—à–µ–º –∏–∑–Ω–∞—á–∞–ª—å–Ω–æ–º —Ö–æ–ª—Å—Ç–µ
        self.canvas = canvas
        # —Å–æ–∑–¥–∞—ë–º –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É 10 –Ω–∞ 100 –ø–∏–∫—Å–µ–ª–µ–π, –∑–∞–∫—Ä–∞—à–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ü–≤–µ—Ç–æ–º –∏ –ø–æ–ª—É—á–∞–µ–º –µ—ë –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –∏–º—è 
        self.id = canvas.create_rectangle(0, 0, 100, 10, fill=color)
        # –∑–∞–¥–∞—ë–º —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Å—Ç–∞—Ä—Ç–æ–≤—ã—Ö –ø–æ–ª–æ–∂–µ–Ω–∏–π –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        start_1 = [40, 60, 90, 120, 150, 180, 200]
        # –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º –∏—Ö
        random.shuffle(start_1)
        # –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤–æ–µ –∏–∑ –ø–µ—Ä–µ–º–µ—à–∞–Ω–Ω—ã—Ö
        self.starting_point_x = start_1[0]
        # –ø–µ—Ä–µ–º–µ—â–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –≤ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        self.canvas.move(self.id, self.starting_point_x, 300)
        # –ø–æ–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–∏–∫—É–¥–∞ –Ω–µ –¥–≤–∏–∂–µ—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É –∏–∑–º–µ–Ω–µ–Ω–∏–π –ø–æ –æ—Å–∏ —Ö –Ω–µ—Ç
        self.x = 0
        # –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ —É–∑–Ω–∞—ë—Ç —Å–≤–æ—é —à–∏—Ä–∏–Ω—É
        self.canvas_width = self.canvas.winfo_width()
        # –∑–∞–¥–∞—ë–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π
        # –µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ —Å—Ç—Ä–µ–ª–∫–∞ –≤–ø—Ä–∞–≤–æ ‚Äî –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –º–µ—Ç–æ–¥ turn_right()
        self.canvas.bind_all('<KeyPress-Right>', self.turn_right)
        # –µ—Å–ª–∏ —Å—Ç—Ä–µ–ª–∫–∞ –≤–ª–µ–≤–æ ‚Äî turn_left()
        self.canvas.bind_all('<KeyPress-Left>', self.turn_left)
        # –ø–æ–∫–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ –¥–≤–∏–≥–∞–µ—Ç—Å—è, –ø–æ—ç—Ç–æ–º—É –∂–¥—ë–º
        self.started = False
        # –∫–∞–∫ —Ç–æ–ª—å–∫–æ –∏–≥—Ä–æ–∫ –Ω–∞–∂–º—ë—Ç Enter ‚Äî –≤—Å—ë —Å—Ç–∞—Ä—Ç—É–µ—Ç
        self.canvas.bind_all('<KeyPress-Return>', self.start_game)
    # –¥–≤–∏–∂–µ–º—Å—è –≤–ø—Ä–∞–≤–æ 
    def turn_right(self, event):
        # –±—É–¥–µ–º —Å–º–µ—â–∞—Ç—å—Å—è –ø—Ä–∞–≤–µ–µ –Ω–∞ 2 –ø–∏–∫—Å–µ–ª—è –ø–æ –æ—Å–∏ —Ö
        self.x = 2
    # –¥–≤–∏–∂–µ–º—Å—è –≤–ª–µ–≤–æ
    def turn_left(self, event):
        # –±—É–¥–µ–º —Å–º–µ—â–∞—Ç—å—Å—è –ª–µ–≤–µ–µ –Ω–∞ 2 –ø–∏–∫—Å–µ–ª—è –ø–æ –æ—Å–∏ —Ö
        self.x = -2
    # –∏–≥—Ä–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è
    def start_game(self, event):
        # –º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å—Ç–∞—Ä—Ç –¥–≤–∏–∂–µ–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
        self.started = True
    # –º–µ—Ç–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –¥–≤–∏–∂–µ–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    def draw(self):
        # —Å–¥–≤–∏–≥–∞–µ–º –Ω–∞—à—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –Ω–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–∏–∫—Å–µ–ª–µ–π
        self.canvas.move(self.id, self.x, 0)
        # –ø–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Ö–æ–ª—Å—Ç–∞
        pos = self.canvas.coords(self.id)
        # –µ—Å–ª–∏ –º—ã —É–ø—ë—Ä–ª–∏—Å—å –≤ –ª–µ–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É 
        if pos[0] <= 0:
            # –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
            self.x = 0
        # –µ—Å–ª–∏ —É–ø—ë—Ä–ª–∏—Å—å –≤ –ø—Ä–∞–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É 
        elif pos[2] >= self.canvas_width:
            # –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è
            self.x = 0
#  –û–ø–∏—Å—ã–≤–∞–µ–º –∫–ª–∞—Å—Å Score, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—á–µ—Ç–æ–≤
class Score:
    # –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    def __init__(self, canvas, color):
        # –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ —Å—á—ë—Ç —Ä–∞–≤–µ–Ω –Ω—É–ª—é
        self.score = 0
        # –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–∞—à —Ö–æ–ª—Å—Ç
        self.canvas = canvas
        # —Å–æ–∑–¥–∞—ë–º –Ω–∞–¥–ø–∏—Å—å, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—á—ë—Ç, –¥–µ–ª–∞–µ–º –µ–≥–æ –Ω—É–∂–Ω–æ —Ü–≤–µ—Ç–∞ –∏ –∑–∞–ø–æ–º–∏–Ω–∞–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–µ –∏–º—è —ç—Ç–æ–π –Ω–∞–¥–ø–∏—Å–∏
        self.id = canvas.create_text(450, 10, text=self.score, font=('Courier', 15), fill=color)
    # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞—Å–∞–Ω–∏–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    def hit(self):
        # —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—á—ë—Ç –Ω–∞ –µ–¥–∏–Ω–∏—Ü—É
        self.score += 1
        # –ø–∏—à–µ–º –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ —Å—á—ë—Ç–∞ 
        self.canvas.itemconfig(self.id, text=self.score)
# —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç ‚Äî –∑–µ–ª—ë–Ω—ã–π —Å—á—ë—Ç 
score = Score(canvas, 'green')
# —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç ‚Äî –±–µ–ª—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
paddle = Paddle(canvas, 'White')
# —Å–æ–∑–¥–∞—ë–º –æ–±—ä–µ–∫—Ç ‚Äî –∫—Ä–∞—Å–Ω—ã–π —à–∞—Ä–∏–∫ 
ball = Ball(canvas, paddle, score, 'red')
# –ø–æ–∫–∞ —à–∞—Ä–∏–∫ –Ω–µ –∫–æ—Å–Ω—É–ª—Å—è –¥–Ω–∞ 
while not ball.hit_bottom:
    # –µ—Å–ª–∏ –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å –∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –º–æ–∂–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è
    if paddle.started == True:
        # –¥–≤–∏–≥–∞–µ–º —à–∞—Ä–∏–∫
        ball.draw()
        # –¥–≤–∏–≥–∞–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É
        paddle.draw()
    # –æ–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—à–µ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ, —á—Ç–æ–±—ã –≤—Å—ë, —á—Ç–æ –Ω—É–∂–Ω–æ, –∑–∞–∫–æ–Ω—á–∏–ª–æ —Ä–∏—Å–æ–≤–∞—Ç—å—Å—è
    tk.update_idletasks()
    # –æ–±–Ω–æ–≤–ª—è–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –∏ —Å–º–æ—Ç—Ä–∏–º –∑–∞ —Ç–µ–º, —á—Ç–æ–±—ã –≤—Å—ë, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –±—ã—Ç—å —Å–¥–µ–ª–∞–Ω–æ ‚Äî –±—ã–ª–æ —Å–¥–µ–ª–∞–Ω–æ
    tk.update()
    # –∑–∞–º–∏—Ä–∞–µ–º –Ω–∞ –æ–¥–Ω—É —Å–æ—Ç—É—é —Å–µ–∫—É–Ω–¥—ã, —á—Ç–æ–±—ã –¥–≤–∏–∂–µ–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—ã–≥–ª—è–¥–µ–ª–æ –ø–ª–∞–≤–Ω–æ
    time.sleep(0.01)
# –µ—Å–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ—à–ª–∞ –¥–æ—Å—é–¥–∞, –∑–Ω–∞—á–∏—Ç, —à–∞—Ä–∏–∫ –∫–æ—Å–Ω—É–ª—Å—è –¥–Ω–∞. –ñ–¥—ë–º 3 —Å–µ–∫—É–Ω–¥—ã, –ø–æ–∫–∞ –∏–≥—Ä–æ–∫ –ø—Ä–æ—á–∏—Ç–∞–µ—Ç —Ñ–∏–Ω–∞–ª—å–Ω—É—é –Ω–∞–¥–ø–∏—Å—å, –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –∏–≥—Ä—É
time.sleep(3)
