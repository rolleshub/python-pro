'''
üêß_konee_ –±–µ—Ç–∞ (2.98) 2022 adi
'''


import webbrowser
from time import sleep
from tkinter import *
from tkinter import *
import random as rdm

print("üêß")

sleep(3)
print("üêß_“ú„ÑñÂá†‰πá‰πá_")

sleep(1)
print("üêß_konee_")

sleep(2)
print("{_}")

sleep(2)
print("{__}")

sleep(1)
print("{____}")

sleep(2)
print("{_____}")

sleep(2)
print("{______}")

sleep(1)
print("–≤–∫–ª—é—á–µ–Ω–∏–µ")

sleep(3)
print("–≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")


n=int(input())
while (n!=3575):
 print('–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ_–ø–æ–ø—ã—Ç–∫—É: ')
 n=int(input())
print("_–¥–æ–±—Ä–æ_–ø–æ–∂–∞–ª–æ–≤–∞—Ç—å_")

fer= input("–ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –≤–æ–∑—Ä–∞—Å—Ç")
if fer == "14":
 print("‚úî")
 sleep(1)

fer= input("–∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–æ–π—Ç–∏? —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ ")
if fer == "—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫":
 print("◊•‡∏£t‡∏Ñ‡∏†‡πè◊©—í‡πÄ–∫")
 sleep(1)

 print("‚öô")

 print("{_}")
 sleep(2)
 print("{__}")
 
 print("–≤—ã –≤–æ—à–ª–∏ –≤ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ –Ω–∞—á–∏–Ω–∞–µ—Å—Ç—è –∑–∞–≥—Ä—É–∑–∫–∞")
else:
 ("–ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ –Ω–∞–∂–º–∏ —ç–Ω—Ç–µ—Ä")
print("{_}")
sleep(2)
print("{__}")

sleep(1)
print("{____}")

sleep(2)
print("{_____}")

sleep(2)
print("{______}")

sleep(2)
matems=input ("–ø–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ –Ω–∞–∂–º–∏ —ç–Ω—Ç–µ—Ä") 
if matems== "":

 print ("‚úî")
else:
 print("–Ω–∞–∂–º–∏—Ç–µ —ç–Ω—Ç–µ—Ä")
sleep(1)
mam=input ("–∫—É–¥–∞ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–æ–π—Ç–∏?: –≤–∫, —è–Ω–¥–µ–∫—Å, –∞–≤–∏—Ç–æ, –µ—Å–ª–∏ –¥—Ä—É–≥–æ–µ –Ω–∞–ø–∏—à–∏—Ç–µ (–¥—Ä—É–≥–æ–µ)")
if mam== "–≤–∫":
 webbrowser.open_new_tab('https://vk.com')


elif mam =="—è–Ω–¥–µ–∫—Å":
 webbrowser.open_new_tab('https://dzen.ru/?yredirect=true')
elif mam =="–∞–≤–∏—Ç–æ":

 webbrowser.open_new_tab('https://www.avito.ru')
else:
 ("–Ω–µ—Ç —Ç–∞–∫–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —á–µ—Ä–µ–∑ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫")

print("–≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∫–æ–¥–∞")
while (n!=4816):
 print('–ø–æ–≤—Ç–æ—Ä–∏—Ç–µ_–ø–æ–ø—ã—Ç–∫—É: ')

 n=int(input())
print("___ –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –∞–ª–µ–∫—Å–µ–π!")
sleep(1)
y =input (" –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–¥–∞ –ø–µ—Ä–µ–π–¥–∏—Ç–µ: https://github.com/rolleshub/python-pro/commit/4789bc39e620d77ce2517814c629b2b7a3531a4e")

rtk=input ("–µ—Å–ª–∏ –Ω—É–∂–µ–Ω –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –Ω–∞–∂–º–∏ —ç–Ω—Ç–µ—Ä")



class Main(Frame):
    def __init__(self, root):
        super(Main, self).__init__(root)
        self.build()

    def build(self):
        self.formula = "0"
        self.lbl = Label(text=self.formula, font=("Times New Roman", 21, "bold"), bg="#000", foreground="#FFF")
        self.lbl.place(x=11, y=50)

        btns = [
            "C", "–Ω–µ –ø—Ä–∏–¥—É–º–∞–ª", "*", "=",
            "1", "2", "3", "/",
            "4", "5", "6", "+",
            "7", "8", "9", "-",
            "(", "0", ")", "X^2"
        ]

        x = 10
        y = 140
        for bt in btns:
            com = lambda x=bt: self.logicalc(x)
            Button(text=bt, bg="#FFF",
                   font=("Times New Roman", 15),
                   command=com).place(x=x, y=y,
                                      width=115,
                                      height=79)
            x += 117
            if x > 400:
                x = 10
                y += 81

    def logicalc(self, operation):
        if operation == "C":
            self.formula = ""
        elif operation == "DEL":
            self.formula = self.formula[0:-1]
        elif operation == "X^2":
            self.formula = str((eval(self.formula))**2)
        elif operation == "=":
            self.formula = str(eval(self.formula))
        else:
            if self.formula == "0":
                self.formula = ""
            self.formula += operation
        self.update()

    def update(self):
        if self.formula == "":
            self.formula = "0"
        self.lbl.configure(text=self.formula)


if __name__ == '__main__':
    root = Tk()
    root["bg"] = "#000"
    root.geometry("485x550+200+200")
    root.title("–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä")
    root.resizable(False, False)
    app = Main(root)
    app.pack()
    root.mainloop()

gw=input("–∏–≥—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ —ç–Ω—Ç–µ—Ä")


class Main(Frame):
    def __init__(self, root):
        super(Main, self).__init__(root)
        self.startUI()

    def startUI(self):
        btn = Button(root, text="–ö–∞–º–µ–Ω—å", font=("Times New Roman", 15),
                     command=lambda x=1: self.btn_click(x))
        btn2 = Button(root, text="–ù–æ–∂–Ω–∏—Ü—ã", font=("Times New Roman", 15),
                      command=lambda x=2: self.btn_click(x))
        btn3 = Button(root, text="–ë—É–º–∞–≥–∞", font=("Times New Roman", 15),
                      command=lambda x=3: self.btn_click(x))

        btn.place(x=10, y=100, width=120, height=50)
        btn2.place(x=155, y=100, width=120, height=50)
        btn3.place(x=300, y=100, width=120, height=50)

        self.lbl = Label(root, text="–ù–∞—á–∞–ª–æ –∏–≥—Ä—ã!", bg="#FFF", font=("Times New Roman", 21, "bold"))
        self.lbl.place(x=150, y=25)

        self.win = self.drow = self.lose = 0

        self.lbl2 = Label(root, justify="left", font=("Times New Roman", 13),
                         text=f"–ü–æ–±–µ–¥: {self.win}\n–ü—Ä–æ–∏–≥—Ä—ã—à–µ–π:"
                              f" {self.lose}\n–ù–∏—á–µ–π: {self.drow}",
                         bg="#FFF")
        self.lbl2.place(x=5, y=5)

    def btn_click(self, choise):
        comp_choise = rdm.randint(1, 3)

        if choise == comp_choise:
            self.drow += 1
            self.lbl.configure(text="–ù–∏—á—å—è")
        elif choise == 1 and comp_choise == 2 \
                or choise == 2 and comp_choise == 3 \
                or choise == 3 and comp_choise == 1:
            self.win += 1
            self.lbl.configure(text="–ü–æ–±–µ–¥–∞")
        else:
            self.lose += 1
            self.lbl.configure(text="–ü—Ä–æ–∏–≥—Ä—ã—à")

        self.lbl2.configure(text=f"–ü–æ–±–µ–¥: {self.win}\n–ü—Ä–æ–∏–≥—Ä—ã—à–µ–π:"
                              f" {self.lose}\n–ù–∏—á–µ–π: {self.drow}")

        del comp_choise


if __name__ == '__main__':
    root = Tk()
    root.geometry("430x160+200+200")
    root.title("–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞")
    root.resizable(False, False)
    root["bg"] = "#FFF"
    app = Main(root)
    app.pack()
    root.mainloop()
